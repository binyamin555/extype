# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      build:
        description: 'Build and upload the package'
        default: true

permissions:
  contents: read
  id-token: write
  
jobs:
  linux:
    name: Build for Linux

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build git+https://github.com/binyamin555/cibuildwheel
    - name: Build package
      if: github.event.inputs.build == 'true'
      # run: python -m build --wheel --sdist --outdir dist/
      run: python -m cibuildwheel --output-dir dist/
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-linux
        path: dist/*.whl

  windows-and-macos:
    name: Build for Windows & Mac

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest", "macos-11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-win-mac
        path: dist/*.whl

  upload:
    name: Upload Wheels
    needs: ["linux", "windows-and-macos"]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: ["build-linux", "build-win-mac"]
        path: dist/
    - name: Dist Directory Tree
      run: ls dist/ -R
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.8.3
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
